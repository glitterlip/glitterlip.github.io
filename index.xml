<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>代码笔记</title>
    <link>https://glitterlip.github.io/</link>
    <description>Recent content on 代码笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sun, 26 Mar 2023 10:42:51 +0800</lastBuildDate><atom:link href="https://glitterlip.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ant Design Pro umijs 使用 Remixicon</title>
      <link>https://glitterlip.github.io/blog/2023-03/ant-design-pro-umijs-%E4%BD%BF%E7%94%A8-remixicon/</link>
      <pubDate>Sun, 26 Mar 2023 10:42:51 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2023-03/ant-design-pro-umijs-%E4%BD%BF%E7%94%A8-remixicon/</guid>
      <description>开了个新项目，使用了 umijs，然后发现了一个好东西，就是 Remixicon，这个图标库，我觉得比 Ant Design 的图标库要好 copilot有点离谱了啊，上面那句话刚说完 「开了个新项目」，一按tab自动给我补全了，好家伙 在ant desgin/ant design pro/umijs项目中使用的话 yarn add remixicon 然后在src/global.less中 @import &amp;#34;~remixicon/fonts/remixicon.css&amp;#34;; 就好了</description>
    </item>
    
    <item>
      <title>小程序真机播放音频失败</title>
      <link>https://glitterlip.github.io/blog/2023-02/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%9F%E6%9C%BA%E6%92%AD%E6%94%BE%E9%9F%B3%E9%A2%91%E5%A4%B1%E8%B4%A5/</link>
      <pubDate>Wed, 22 Feb 2023 10:38:57 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2023-02/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%9F%E6%9C%BA%E6%92%AD%E6%94%BE%E9%9F%B3%E9%A2%91%E5%A4%B1%E8%B4%A5/</guid>
      <description>小程序android真机调试时播放音频失败,开发者工具是可以的 原代码 const innerAudioContext = Taro.createInnerAudioContext() innerAudioContext.autoplay = true innerAudioContext.loop = false innerAudioContext.src = `https://a.com/jpmp/api/voice` innerAudioContext.onError(e =&amp;gt; { console.log(e) }) innerAudioContext.play() 出现的错误信息 {errCode: 10001, errMsg: &amp;#34;errCode:62, err:load or init native decode so fail&amp;#34;} 诡异的是域名已经白名单,开发时也可以播放,真机调试就是没声音 开始以为是mp3音频的编码格式手机不支持,不能解码无法播放,原始格式是audio-16khz-128kbitrate-mono-mp3,陆续换了 ogg-16khz-16bit-mono-opus webm-16khz-16bit-mono-opus riff-8khz-8bit-mono-alaw riff-8khz-8bit-mono-mulaw riff-8khz-16bit-mono-pcm 竟然没一个能播放的,webm,ogg都不支持</description>
    </item>
    
    <item>
      <title>Taro小程序使用remixicon</title>
      <link>https://glitterlip.github.io/blog/2023-02/taro%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8remixicon/</link>
      <pubDate>Sun, 19 Feb 2023 16:14:01 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2023-02/taro%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8remixicon/</guid>
      <description>taro开发小程序时,开发阶段使用图标字体没问题,真机预览后图标就不显示了 后来改成直接导入对应图标的svg,每次都要找svg图片就很烦,而且一放大字体也跟着变粗,看了下源文件也不大,打算直接放进项目里了 打开https://transfonter.org/上传woff2字体文件,选中base64编码 解压下载的文件夹,把stylesheet.css文件重命名为icon.less放到src下面,app.</description>
    </item>
    
    <item>
      <title>Taro打包静态文件</title>
      <link>https://glitterlip.github.io/blog/2023-02/taro%E6%89%93%E5%8C%85%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 11 Feb 2023 23:55:15 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2023-02/taro%E6%89%93%E5%8C%85%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/</guid>
      <description>小程序需要添加音效和背景音乐，网络加载会有一定延迟，音效文件也不大，直接打包进小程序 修改config/index.jx { ... copy: { patterns: [ { from: &amp;#39;src/audio/&amp;#39;, to: &amp;#39;dist/audios/&amp;#39;, ignore: [&amp;#39;*.js&amp;#39;] }, //把src下audio目录复制到编译后的dist/audios目录 ], options: { } } 点击按钮时播放音效 const click = () =&amp;gt; { const innerAudioContext = Taro.createInnerAudioContext() innerAudioContext.autoplay = false innerAudioContext.loop = false innerAudioContext.src = `audios/test.mp3` innerAudioContext.play() }</description>
    </item>
    
    <item>
      <title>屏蔽github搜索结果</title>
      <link>https://glitterlip.github.io/blog/2023-02/%E5%B1%8F%E8%94%BDgithub%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C/</link>
      <pubDate>Fri, 10 Feb 2023 18:39:11 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2023-02/%E5%B1%8F%E8%94%BDgithub%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C/</guid>
      <description>每次github搜东西总有几个不相关的项目，github搜索结果一页就八条，那三个项目星星不少，每次都要看一遍再排除,真的麻烦 这次直接用adblock屏蔽掉 chrome装这个插件,支持自定义规则的adblock系插件应该都可以 然后自定义规则即可 github.com#?#li.repo-list-item.public.source:-abp-has(a:-abp-contains(cirosantilli)) github.com#?#li.repo-list-item.public.source:-abp-has(a:-abp-contains(Dujltqzv))[](https://) github.com#?#li.repo-list-item.public.source:-abp-has(a:-abp-contains(lTbgykio)) github.com#?#li.repo-list-item.public.source:-abp-has(a:-abp-contains(Don-Jimmy))</description>
    </item>
    
    <item>
      <title>npm添加用户 登录时403错误</title>
      <link>https://glitterlip.github.io/blog/2023-02/npm%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7-%E7%99%BB%E5%BD%95%E6%97%B6403%E9%94%99%E8%AF%AF/</link>
      <pubDate>Mon, 06 Feb 2023 11:53:51 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2023-02/npm%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7-%E7%99%BB%E5%BD%95%E6%97%B6403%E9%94%99%E8%AF%AF/</guid>
      <description>写了个包想发布到npm上，结果npm login/npm adduser的时候总是返回403错误 npm ERR! code E403 npm ERR! 403 403 Forbidden - PUT https://registry.npmmirror.com/-/user/org.couchdb.user:dogdayslast - [FORBIDDEN] Public registration is not allowed npm ERR! 403 In most cases, you or one of your dependencies are requesting npm ERR! 403 a package version that is forbidden by your security policy, or npm ERR! 403 on a server you do not have access to. npm ERR! A complete log of this run can be found in: npm ERR! /Users/bao/.npm/_logs/2023-02-06T03_42_04_150Z-debug-0.log 仔细检查了没有冲突的包名，第一次发布也没有版本冲突，命令行代理也关了，nvm也use了最新的npm版本,让我看日志也看了，连个error都没有 0 verbose cli [ 0 verbose cli &amp;#39;/Users/bao/.nvm/versions/node/v16.15.0/bin/node&amp;#39;, 0 verbose cli &amp;#39;/Users/bao/.nvm/versions/node/v16.15.0/bin/npm&amp;#39;, 0 verbose cli &amp;#39;completion&amp;#39;, 0</description>
    </item>
    
    <item>
      <title>Laravel发送响应return后执行代码</title>
      <link>https://glitterlip.github.io/blog/2023-01/laravel%E5%8F%91%E9%80%81%E5%93%8D%E5%BA%94return%E5%90%8E%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Thu, 05 Jan 2023 16:45:57 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2023-01/laravel%E5%8F%91%E9%80%81%E5%93%8D%E5%BA%94return%E5%90%8E%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81/</guid>
      <description>有时候处理请求时，有些日志收尾工作，直接处理吧增加响应时间，建个job放队列处理又感觉没啥必要 比如记录访问者日志信息，我们会根据ip去调用go服务查询asn，country code，city，大致的经纬度，访问了资源会把访问次数+1 这两个任务开始的时候一个放队列处理，一个缓存访问量+1，差值达到阈值之后再保存落库。 Laravel的文档介绍了中间件的terminate方法，问题是可能还没开始处理请求</description>
    </item>
    
    <item>
      <title>golang实现laravel的cache remember方法</title>
      <link>https://glitterlip.github.io/blog/2022-12/golang%E5%AE%9E%E7%8E%B0laravel%E7%9A%84cache-remember%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 27 Dec 2022 10:15:14 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-12/golang%E5%AE%9E%E7%8E%B0laravel%E7%9A%84cache-remember%E6%96%B9%E6%B3%95/</guid>
      <description>怀念laravel的缓存，太方便了，用golang实现一下 安利一下这个包 gookit/cache type Cache interface { // basic operation Has(key string) bool Get(key string) interface{} Set(key string, val interface{}, ttl time.Duration) (err error) Del(key string) error // multi operation GetMulti(keys []string) map[string]interface{} SetMulti(values map[string]interface{}, ttl time.Duration) (err error) DelMulti(keys []string) error // clear and close Clear() error Close() error } 这个包通过适配各种常用的缓存驱动来提供统一的封装好的缓存操作方法。切换驱动只需要一行代码就行。 func Remember(ctx context.Context, pointer interface{}, key string, ttl time.Duration, cb func() error) error { if cache.Has(key) { //如果缓存有值，则反序列化 return Json.Unmarshal(cache.Get(key).([]byte), pointer) } else { //如果没有值，调用callback， err := cb() if err != nil { return err } /</description>
    </item>
    
    <item>
      <title>Echo获取代理真实Ip</title>
      <link>https://glitterlip.github.io/blog/2022-12/echo%E8%8E%B7%E5%8F%96%E4%BB%A3%E7%90%86%E7%9C%9F%E5%AE%9Eip/</link>
      <pubDate>Mon, 19 Dec 2022 10:43:46 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-12/echo%E8%8E%B7%E5%8F%96%E4%BB%A3%E7%90%86%E7%9C%9F%E5%AE%9Eip/</guid>
      <description>后端用的echo，前面分别挂了一台上海和香港的服务器做代理转发,反向代理之后获取不到真实IP _, n1, _ := net.ParseCIDR(&amp;#34;110.42.x.x/32&amp;#34;) //解析cidr拿到ipnet _, n2, _ := net.ParseCIDR(&amp;#34;119.28.x.x/32&amp;#34;) E.IPExtractor = echo.ExtractIPFromXFFHeader(echo.TrustIPRange(n1),echo.TrustIPRange(n2)) //设置代理的ip</description>
    </item>
    
    <item>
      <title>javassist修改jar包</title>
      <link>https://glitterlip.github.io/blog/2022-12/javassist%E4%BF%AE%E6%94%B9jar%E5%8C%85/</link>
      <pubDate>Sun, 04 Dec 2022 02:25:06 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-12/javassist%E4%BF%AE%E6%94%B9jar%E5%8C%85/</guid>
      <description>用aspose slide为ppt文件生成预览图片，生成图片有水印，可以用javassist修改jar包的方式来去除水印限制 pom文件 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.aspose&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;aspose-slides&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;22.9&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt; &amp;lt;systemPath&amp;gt;${project.basedir}/src/main/resources/lib/aspose-slides-22.9-jdk16.jar &amp;lt;/systemPath&amp;gt; &amp;lt;classifier&amp;gt;jdk16&amp;lt;/classifier&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.javassist&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;javassist&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.28.0-GA&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 填个错的license试试 String license = &amp;#34;&amp;lt;License&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;Data&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;Products&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;Product&amp;gt;Aspose.Total for Java&amp;lt;/Product&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;Product&amp;gt;Aspose.Words for Java&amp;lt;/Product&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;/Products&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;EditionType&amp;gt;Enterprise&amp;lt;/EditionType&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;SubscriptionExpiry&amp;gt;20991231&amp;lt;/SubscriptionExpiry&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;LicenseExpiry&amp;gt;20991231&amp;lt;/LicenseExpiry&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;SerialNumber&amp;gt;8bfe198c-7f0c-4ef8-8ff0-&amp;lt;/SerialNumber&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;/Data&amp;gt;\n&amp;#34; + &amp;#34;&amp;lt;/License&amp;gt;&amp;#34;; InputStream is = new ByteArrayInputStream(license.getBytes(StandardCharsets.UTF_8)); License aposeLic = new License(); aposeLic.setLicense(is); 看看报错信息 2022-12-04 03:03:45.498 ERROR 63412 --- [nio-8091-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is class com.aspose.slides.exceptions.InvalidOperationException: License parsing error ---&amp;gt; class com.aspose.slides.exceptions.InvalidOperationException: Signature check error. ---&amp;gt; java.security.SignatureException: Signature length not correct: got 0 but was expecting 256 --- End</description>
    </item>
    
    <item>
      <title>Aspose Slide 生成图片缩略图中文乱码</title>
      <link>https://glitterlip.github.io/blog/2022-11/aspose-slide-%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E7%BC%A9%E7%95%A5%E5%9B%BE%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</link>
      <pubDate>Tue, 15 Nov 2022 19:44:05 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-11/aspose-slide-%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E7%BC%A9%E7%95%A5%E5%9B%BE%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</guid>
      <description>aspose slide生成图片缩略图中文乱码 使用aspose slide 给ppt生成图片缩略图，mac上没问题，部署到服务器上，生成的缩略图中文全部都是方块 把mac的字体传到服务器上还是不行,读取ppt时会出现 class com.aspose.slides.PptxReadException: Index 32 out of bounds for length 32 ---&amp;gt; class com.aspose.slides.ms.pbdb106a0.bt com.aspose.slides.avm.do(Unknown Source) com.aspose.slides.Presentation.int(Unknown Source) com.aspose.slides.Presentation.if(Unknown Source) com.aspose.slides.Presentation.&amp;lt;init&amp;gt;(Unknown Source) com.aspose.slides.Presentation.&amp;lt;init&amp;gt;(Unknown Source) 这个错误，后来换成使用win10的字体可以了 centos7的步骤 把字体上传到 /usr/share/fonts/win 目录 cd /usr/share/fonts/win mkfontscale //建立索引 fc-cache //刷新缓存 fc-list //查看字体列表 fc-list :lang=zh</description>
    </item>
    
    <item>
      <title>goquery 处理中文网页</title>
      <link>https://glitterlip.github.io/blog/2022-11/goquery-%E5%A4%84%E7%90%86%E4%B8%AD%E6%96%87%E7%BD%91%E9%A1%B5/</link>
      <pubDate>Wed, 09 Nov 2022 03:51:51 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-11/goquery-%E5%A4%84%E7%90%86%E4%B8%AD%E6%96%87%E7%BD%91%E9%A1%B5/</guid>
      <description>&amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=gb2312&amp;#34;&amp;gt; 爬虫处理网页，标签用的gb2312字符集，goquery拿到的是乱码 刚开始用的 func DecodeToGBK2312(text string) string { dst := make([]byte, len(text)*2) tr := simplifiedchinese.HZGB2312.NewDecoder() nDst, _, _ := tr.Transform(dst, []byte(text), true) return string(dst[:nDst]) } 还是乱码。。。。 后来在wiki里找了一种方法 func detectContentCharset(body io.Reader) string { r := bufio.NewReader(body) if data, err := r.Peek(1024); err == nil { if _, name, ok := charset.DetermineEncoding(data, &amp;#34;&amp;#34;); ok { return name } } return &amp;#34;utf-8&amp;#34; } // DecodeHTMLBody returns an decoding reader of the html Body for the specified `charset` // If `charset` is empty, DecodeHTMLBody tries to guess the encoding from the content func DecodeHTMLBody(body io.Reader, charset string) (io.Reader, error) { if charset == &amp;#34;&amp;#34; { charset = detectContentCharset(body) } e, err := htmlindex.Get(charset) if err != nil { return nil, err } if name, _ := htmlindex.Name(e); name != &amp;#34;utf-8&amp;#34; { body = e.NewDecoder().Reader(body) } return body, nil } 试了下如果</description>
    </item>
    
    <item>
      <title>1342</title>
      <link>https://glitterlip.github.io/snippet/leetcode/1342/</link>
      <pubDate>Mon, 07 Nov 2022 03:59:30 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/leetcode/1342/</guid>
      <description>1342. Number of Steps to Reduce a Number to Zero 题目 Given an integer num, return the number of steps to reduce it to zero. In one step, if the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it. Example 1: Input: num = 14 Output: 6 Explanation: Step 1) 14 is even; divide by 2 and obtain 7. Step 2) 7 is odd; subtract 1 and obtain 6. Step 3) 6 is even; divide by 2 and obtain 3. Step 4) 3 is odd; subtract 1 and obtain 2. Step 5) 2 is even; divide by 2 and obtain 1. Step 6) 1 is odd; subtract 1 and obtain 0. Example 2: Input: num = 8 Output: 4 Explanation: Step 1) 8 is even; divide by 2 and obtain 4. Step 2) 4 is even; divide by 2 and obtain 2. Step 3) 2 is even; divide by 2 and obtain 1. Step 4) 1 is odd; subtract 1 and obtain 0. Example 3: Input: num = 123 Output: 12 Constraints: 0 &amp;lt;= num &amp;lt;= 106 题目大意 给你一个数，偶数</description>
    </item>
    
    <item>
      <title>412</title>
      <link>https://glitterlip.github.io/snippet/leetcode/412/</link>
      <pubDate>Sat, 05 Nov 2022 22:57:57 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/leetcode/412/</guid>
      <description>412. Fizz Buzz 题目 Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Example: n = 15, Return: [ &amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;Fizz&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;Buzz&amp;#34;, &amp;#34;Fizz&amp;#34;, &amp;#34;7&amp;#34;, &amp;#34;8&amp;#34;, &amp;#34;Fizz&amp;#34;, &amp;#34;Buzz&amp;#34;, &amp;#34;11&amp;#34;, &amp;#34;Fizz&amp;#34;, &amp;#34;13&amp;#34;, &amp;#34;14&amp;#34;, &amp;#34;FizzBuzz&amp;#34; ] 题目大意 3的倍数输出 &amp;ldquo;Fizz&amp;rdquo;，5的倍数输出 &amp;ldquo;Buzz&amp;rdquo;，15的倍数输出 &amp;ldquo;FizzBuzz&amp;rdquo;，其他时候都输出原本的数字。 解题思路 按照题意</description>
    </item>
    
    <item>
      <title>412</title>
      <link>https://glitterlip.github.io/snippet/leetcode/876/</link>
      <pubDate>Sat, 05 Nov 2022 22:57:57 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/leetcode/876/</guid>
      <description>412. Fizz Buzz 题目 Given a non-empty, singly linked list with head node head, return a middle node of linked list. If there are two middle nodes, return the second middle node. Example 1: Input: [1,2,3,4,5] Output: Node 3 from this list (Serialization: [3,4,5]) The returned node has value 3. (The judge&amp;#39;s serialization of this node is [3,4,5]). Note that we returned a ListNode object ans, such that: ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, and ans.next.next.next = NULL. Example 2: Input: [1,2,3,4,5,6] Output: Node 4 from this list (Serialization: [4,5,6]) Since the list has two middle nodes with values 3 and 4, we return the second one. Note: The number of nodes in the given list will be between 1 and 100. 题目大意 输出链表中间结点。这题在前面题目中反复出现了很多次了。 如果链表长度是奇数，输出中间结点是中间结点。如果链表长度是双数，输出中间结点是中位数后</description>
    </item>
    
    <item>
      <title>1672</title>
      <link>https://glitterlip.github.io/snippet/leetcode/1672/</link>
      <pubDate>Sat, 05 Nov 2022 00:05:15 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/leetcode/1672/</guid>
      <description>1672. Richest Customer Wealth 题目 You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the ith customer has in the jth bank. Return the wealth that the richest customer has. A customer&amp;rsquo;s wealth is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum wealth. Example 1: Input: accounts = [[1,2,3],[3,2,1]] Output: 6 Explanation:1st customer has wealth = 1 + 2 + 3 = 6 2nd customer has wealth = 3 + 2 + 1 = 6 Both customers are considered the richest with a wealth of 6 each, so return 6. Example 2: Input: accounts = [[1,5],[7,3],[3,5]] Output: 10 Explanation: 1st customer has wealth = 6 2nd customer has wealth = 10 3rd customer has wealth = 8 The 2nd customer is the richest with a wealth of 10. Example 3: Input: accounts = [[2,8,7],[7,1,3],[1,9,5]] Output: 17 Constraints: m == accounts.length n == accounts[i].length 1 &amp;lt;= m, n &amp;lt;= 50 1 &amp;lt;= accounts[i][j] &amp;lt;= 100 题目大意 给你一个 m x n 的整数网格 accounts ，其中 accounts[i][j] 是第 i</description>
    </item>
    
    <item>
      <title>Qrcode React</title>
      <link>https://glitterlip.github.io/snippet/qrcode-react/</link>
      <pubDate>Thu, 03 Nov 2022 03:38:38 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/qrcode-react/</guid>
      <description>download qrcode.react svg as png to fix Function components cannot be given refs. Attempts to access this ref will fail error
import React,{useRef} from &amp;#39;react&amp;#39;; import {QRCodeCanvas} from &amp;#39;qrcode.react&amp;#39; export function App(props) { const divRef = useRef(null); const download = () =&amp;gt; { const node = divRef.current?.children[0]; if (node == null) { return; } const dataURI = node.toDataURL(&amp;#39;image/png&amp;#39;); let a = document.createElement(&amp;#39;a&amp;#39;); a.download = &amp;#39;qrcode-canvas.png&amp;#39;; a.href = dataURI; a.click(); }; return ( &amp;lt;div className=&amp;#39;App&amp;#39;&amp;gt; &amp;lt;h1&amp;gt;Hello React.&amp;lt;/h1&amp;gt; &amp;lt;div className={&amp;#39;mx-auto pt-2&amp;#39;} ref={divRef}&amp;gt; &amp;lt;QRCodeCanvas value={&amp;#34;https://playcode.io/react&amp;#34;} /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div className=&amp;#39;mx-auto pt-2&amp;#39;&amp;gt; &amp;lt;button onClick={download}&amp;gt; Download &amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; ); } // Log to console console.log(&amp;#39;Hello console&amp;#39;); </description>
    </item>
    
    <item>
      <title>fix Cloudflare R2 Network connection lost error</title>
      <link>https://glitterlip.github.io/blog/2022-11/fix-cloudflare-r2-network-connection-lost-error/</link>
      <pubDate>Tue, 01 Nov 2022 00:23:51 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-11/fix-cloudflare-r2-network-connection-lost-error/</guid>
      <description>想白嫖下cloudflare的R2，workers上传文件的时候总是会出现Network connection lost error错误， 用的Hono包，完全照着cloudflare的官方文档抄 export const AddFile = async (c: Context): Promise&amp;lt;Response&amp;gt; =&amp;gt; { //save object const data = await c.req.formData(); const file: File = data.get(&amp;#34;file&amp;#34;) as File; const name = await md5(file) as string; const bucket = c.env.DRIVE as R2Bucket try { const saved = await bucket.put(name, file, { httpMetadata: { contentType: file.type }, customMetadata: { createdAt: Date.now().toString(), } }) } catch (e) { console.log(e) return Error(c, CODE_CLOUDFLARE_SERVICE_FAILED, &amp;#39;service unavailable,please try again later&amp;#39;) } return Success(c, &amp;#39;ok&amp;#39;) } 结果总是网络链接断开,用wrangler还有网站的Real-time Logs 啥信息都看不出来</description>
    </item>
    
    <item>
      <title>Laravel查看缓存剩余时间</title>
      <link>https://glitterlip.github.io/blog/2022-10/laravel%E6%9F%A5%E7%9C%8B%E7%BC%93%E5%AD%98%E5%89%A9%E4%BD%99%E6%97%B6%E9%97%B4/</link>
      <pubDate>Sat, 22 Oct 2022 16:44:28 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-10/laravel%E6%9F%A5%E7%9C%8B%E7%BC%93%E5%AD%98%E5%89%A9%E4%BD%99%E6%97%B6%E9%97%B4/</guid>
      <description>laravel当配置redis为缓存时查看缓存的剩余时间 Laravel版本9.12 Laravel的缓存配置文件config/cache.php &amp;#39;prefix&amp;#39; =&amp;gt; env(&amp;#39;CACHE_PREFIX&amp;#39;, Str::slug(env(&amp;#39;APP_NAME&amp;#39;, &amp;#39;laravel&amp;#39;), &amp;#39;_&amp;#39;).&amp;#39;_cache&amp;#39;) Laravel的数据库配置文件config/database.php &amp;#39;redis&amp;#39; =&amp;gt; [ &amp;#39;client&amp;#39; =&amp;gt; env(&amp;#39;REDIS_CLIENT&amp;#39;, &amp;#39;phpredis&amp;#39;), &amp;#39;options&amp;#39; =&amp;gt; [ &amp;#39;cluster&amp;#39; =&amp;gt; env(&amp;#39;REDIS_CLUSTER&amp;#39;, &amp;#39;redis&amp;#39;), &amp;#39;prefix&amp;#39; =&amp;gt; env(&amp;#39;REDIS_PREFIX&amp;#39;, Str::slug(env(&amp;#39;APP_NAME&amp;#39;, &amp;#39;laravel&amp;#39;), &amp;#39;_&amp;#39;) . &amp;#39;_database_&amp;#39;), ], ] Laravel 缓存key的生成规则为config(&#39;database.redis.options.prefix&#39;).config(&#39;cache</description>
    </item>
    
    <item>
      <title>grpc php客户端与golang服务端通信</title>
      <link>https://glitterlip.github.io/blog/2022-10/grpc-php%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8Egolang%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Sat, 15 Oct 2022 19:46:21 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-10/grpc-php%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8Egolang%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%80%9A%E4%BF%A1/</guid>
      <description>版本 go version go1.19.1 darwin/arm64 protoc --version libprotoc 3.21.9 projectpath 代表项目根目录 Go服务端 初始化golang项目，编写proto文件 // projectpath/proto/link.proto syntax = &amp;#34;proto3&amp;#34;; package proto; option go_package = &amp;#34;/proto&amp;#34;; service Link{ rpc GetLink(GetLinkRequest) returns (GetLinkResponse){} } message GetLinkRequest{ int32 driver = 1; string linkId = 2; string token = 3; } message GetLinkResponse { int32 code = 1; string link = 2; string pwd = 3; } 安装所需工具 go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28 //用于生成xx.pb.go文件 主要是link.proto里面的message对应的go代码 go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2 //用于生成xx_grpc.pb.go 即grpc服务的go版本服务端和客户端 //安装之后查看是否安</description>
    </item>
    
    <item>
      <title>编写popclip扩展</title>
      <link>https://glitterlip.github.io/blog/2022-10/%E7%BC%96%E5%86%99popclip%E6%89%A9%E5%B1%95/</link>
      <pubDate>Mon, 10 Oct 2022 15:30:54 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-10/%E7%BC%96%E5%86%99popclip%E6%89%A9%E5%B1%95/</guid>
      <description>最近网站碰到的爬虫有点多，经常需要查询ip的asn， 每次都要复制然后打开浏览器再粘贴。popclip有一个插件可以自动识别选中的文本里的网址并通过浏览器打开,想着自己改改弄一个扩展解放双手 新的popclip从PopClip 2021.11开始，支持一种简便的扩展编写方式 Extension Snippets ，只需要按照对应格式编写一个yaml配置文件，然后选中，在点击popclip弹出的install按钮即可 # popclip extension to check ip name: IP Check icon: search IP</description>
    </item>
    
    <item>
      <title>ssh端口转发</title>
      <link>https://glitterlip.github.io/blog/2022-10/ssh%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</link>
      <pubDate>Thu, 06 Oct 2022 22:11:41 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-10/ssh%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</guid>
      <description>ssh端口转发 本地端口转发 将发送到本机某个端口的请求转发给远程ssh服务器的某个端口 ssh -L [LOCAL_IP:]LOCAL_PORT:DESTINATION:DESTINATION_PORT [USER@]SSH_SERVER 比如服务器elk的kibana服务，mysql服务，Druid,nacos的管理端,rancher的管理端这些肯定是不能暴露给公网访问的 ssh -L -N 15601:127.0.0.1:5601 root@remoteip 这条命令会将发送到本机15601端口的请求转发到服务器的5601端口，在本机打开浏览器访问http://localhost:15601/即可访问服务器上部署的ki</description>
    </item>
    
    <item>
      <title>Laravel Job添加telescope Tags</title>
      <link>https://glitterlip.github.io/blog/2022-10/laravel-job%E6%B7%BB%E5%8A%A0telescope-tags/</link>
      <pubDate>Sat, 01 Oct 2022 14:57:40 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-10/laravel-job%E6%B7%BB%E5%8A%A0telescope-tags/</guid>
      <description>请求添加tag laravel开了telescope，请求添加tag还好说 //直接在TelescopeServiceProvider的register方法判断就好了 Telescope::tag(function (IncomingEntry $entry) { if ($entry-&amp;gt;isRequest()){ $tags = []; $tags[] = preg_replace(&amp;#39;/(\d+)\.(\d+)\.(\d+)\.(\d+)/&amp;#39;, &amp;#39;$1.$2.*.*&amp;#39;, request()-&amp;gt;getClientIp()); $tags[] = preg_replace(&amp;#39;/(\d+)\.(\d+)\.(\d+)\.(\d+)/&amp;#39;, &amp;#39;$1.$2.$3.*&amp;#39;, request()-&amp;gt;getClientIp()); $tags[] = $t; if (! request()-&amp;gt;header(&amp;#39;referer&amp;#39;) ) { $tags[] = &amp;#39;noreferer&amp;#39;; } return $tags; } }); job添加tag 想给job添加tag,而且需要根据job的数据添加tag,直接在job方法中新增一个tags方法即可 &amp;lt;?php namespace App\Jobs; class XXJob implements ShouldQueue, ShouldBeUnique { use Dispatchable, InteractsWithQueue, Queueable, SerializesModels; public $id; public function __construct($id) { $this-&amp;gt;id = $id; } public function</description>
    </item>
    
    <item>
      <title>小程序加密网络通道,小程序aes加密</title>
      <link>https://glitterlip.github.io/blog/2022-09/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%A0%E5%AF%86%E7%BD%91%E7%BB%9C%E9%80%9A%E9%81%93%E5%B0%8F%E7%A8%8B%E5%BA%8Faes%E5%8A%A0%E5%AF%86/</link>
      <pubDate>Thu, 29 Sep 2022 14:23:49 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-09/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%A0%E5%AF%86%E7%BD%91%E7%BB%9C%E9%80%9A%E9%81%93%E5%B0%8F%E7%A8%8B%E5%BA%8Faes%E5%8A%A0%E5%AF%86/</guid>
      <description>为了防止小程序的接口被盗用，用了小程序的加密网络通道,前端使用cryptojs加密，报错Native crypto module could not be used to get secure random number. 结论 修改package.json,版本降级,&amp;quot;crypto-js&amp;quot;: &amp;quot;3.1.9-1&amp;quot;, 或者改成使用https://github.com/ricmoo/aes-js 原因 刚开始用的官方文档推荐的https://github.com/ricmoo/aes-js ,结果aes-cbc</description>
    </item>
    
    <item>
      <title>Tailwind Missing</title>
      <link>https://glitterlip.github.io/blog/2022-09/tailwind-missing/</link>
      <pubDate>Wed, 28 Sep 2022 22:04:41 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-09/tailwind-missing/</guid>
      <description>Tailwindcss 动态生成类名失效 用的reactjs和JedWatson/classnames这个包做一个随时间变化颜色的功能 const [colorCls, setColorCls] = useState&amp;lt;string&amp;gt;(&amp;#39;green-400&amp;#39;) &amp;lt;span className={classNames(&amp;#39;text-base font-extrabold&amp;#39;, `text-${colorCls}`)}&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;div className={classNames(&amp;#39;p-4&amp;#39;, `bg-${colorCls}`)}&amp;gt;&amp;lt;/span&amp;gt; 类名正常生成了，但是css没生成 ，因为tailwindcss不支持动态生成的，即使开了jit模式也不行，必须在构建的时候被扫描到才行。 只能写全类名或者定义一个临时变量保存所有可能类名了</description>
    </item>
    
    <item>
      <title>linux less命令</title>
      <link>https://glitterlip.github.io/blog/2022-09/linux-less%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 28 Sep 2022 10:44:03 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-09/linux-less%E5%91%BD%E4%BB%A4/</guid>
      <description>linux中的less命令 -G 移动到最后一页 -gg 第一页 -F 实时更新 -b 向上翻页 -空格 向下翻页 /kw 向后搜索kw ?kw 向前搜索kw 实时过滤 有时候查看nginx日志时，想查看爬虫抓取记录，可以在查看时输入&amp;amp;bingbot|Googlebot|Baiduspider, &amp;amp;后面接正则表达式，bingbot|Googlebot|Baiduspider表示过滤展示日志中行记录包含必应或者百度或者谷歌蜘蛛的记录，</description>
    </item>
    
    <item>
      <title>gin打包html模板和静态资源文件</title>
      <link>https://glitterlip.github.io/blog/2022-09/gin%E6%89%93%E5%8C%85html%E6%A8%A1%E6%9D%BF%E5%92%8C%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 18 Sep 2022 01:26:18 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-09/gin%E6%89%93%E5%8C%85html%E6%A8%A1%E6%9D%BF%E5%92%8C%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/</guid>
      <description>[GIN-debug] [WARNING] Since SetHTMLTemplate() is NOT thread-safe. It should only be called at initialization. ie. before any route is registered or the router is listening in a socket: router := gin.Default() router.SetHTMLTemplate(template) // &amp;lt;&amp;lt; good place Gin和Echo有点不一样，需要在注册路由之前注册模板 注册子目录的html文件 ├── go.mod ├── go.sum ├── app.go ├── resources │ ├── css │ │ └── input.css │ ├── js │ │ └── tailwind.config.js │ └── views │ ├── detail.html │ ├── home │ │ └── home.index.html │ └── search.html func walkDir(fileSystem embed.FS, path string) { _, err := T.ParseFS(fileSystem, path+&amp;#34;/*.html&amp;#34;) if err != nil { panic(fmt.Sprintf(&amp;#34;parse error:%s&amp;#34;, err.Error())) } entries, _ := fs.ReadDir(fileSystem, path) for _, entry := range entries { if entry.IsDir() { walkDir(fileSystem, path+&amp;#34;/&amp;#34;+entry.Name()) } } } T:=template.New(&amp;#34;view&amp;#34;) T.ParseFS(ResourcesFS, &amp;#34;resources/views/*.html&amp;#34;) entries, _ := ResourcesFS.ReadDir(&amp;#34;resources/views&amp;#34;) for _, entry := range entries { if entry.IsDir() { walkDir(ResourcesFS, &amp;#34;resources/views/&amp;#34;+entry.Name()) } }</description>
    </item>
    
    <item>
      <title>umijs配置多环境</title>
      <link>https://glitterlip.github.io/blog/2022-09/umijs%E9%85%8D%E7%BD%AE%E5%A4%9A%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Thu, 08 Sep 2022 10:03:58 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-09/umijs%E9%85%8D%E7%BD%AE%E5%A4%9A%E7%8E%AF%E5%A2%83/</guid>
      <description>umijs配置多环境 es的index 使用yarn create umi创建的项目，版本umi@4.0.13 首先修改package.json文件 { &amp;#34;scripts&amp;#34;: { &amp;#34;build&amp;#34;: &amp;#34;UMI_ENV=prod max build&amp;#34; } } 修改项目配置文件.umirc.ts import { defineConfig } from &amp;#39;@umijs/max&amp;#39;; const { UMI_ENV } = process.env; export default defineConfig({ define: { &amp;#39;process.env.UMI_ENV&amp;#39;: UMI_ENV, }, }); 在其他js文件中使用 export const BASEURL_HTTP = process.env.UMI_ENV == &amp;#39;prod&amp;#39; ? &amp;#39;/&amp;#39; : &amp;#39;http://127.0.0.1:18083&amp;#39;;</description>
    </item>
    
    <item>
      <title>umijs Tailwindcss样式冲突</title>
      <link>https://glitterlip.github.io/blog/2022-08/umijs-tailwindcss%E6%A0%B7%E5%BC%8F%E5%86%B2%E7%AA%81/</link>
      <pubDate>Thu, 25 Aug 2022 20:56:00 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-08/umijs-tailwindcss%E6%A0%B7%E5%BC%8F%E5%86%B2%E7%AA%81/</guid>
      <description>umi同时开启了tailwindcss和ant design插件，会导致样式冲突 可以在tailwindcss.css中关闭，只保留工具类即可 /*@tailwind base;*/ /*@tailwind components;*/ @tailwind utilities; 但是css动画在base里，开了base之后又会导致ant design按钮及其他组件样式覆盖 可以tailwind.config.js设置里关掉preflight module.exports = { content: [ &amp;#39;./src/pages/**/*.tsx&amp;#39;, &amp;#39;./src/components/**.tsx&amp;#39;, &amp;#39;./src/layouts/**.tsx&amp;#39;, ], corePlugins: { preflight: false, } }</description>
    </item>
    
    <item>
      <title>Golang Echo,React Umijs 项目部署</title>
      <link>https://glitterlip.github.io/blog/2022-08/golang-echoreact-umijs-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 18 Aug 2022 15:30:31 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-08/golang-echoreact-umijs-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</guid>
      <description>nginx 配置文件 server { #强制https listen 80; listen [::]:80; server_name project.com; return 301 https://project.com$request_uri; } map $http_upgrade $connection_upgrade { default upgrade; &amp;#39;&amp;#39; close; } server { listen 443 ssl; ssl_certificate /etc/letsencrypt/live/project.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/project.com/privkey.pem; server_name project.com; #默认为umijs 构建产物 location / { root /data/project/project/public/dist; index index.html index.htm; try_files $uri $uri/ /index.html; } location /api { # golang后端api监听18081端口 proxy_pass http://127.0.0.1:18081/api; proxy_set_header Upgrade $http_upgrade; #websocket 链接 proxy_set_header Connection $connection_upgrade; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; } error_log /var/log/nginx/project_error.log; access_log /var/log/nginx/project_access.log; } k8s服务器在国内，这个项目服务器在香港，ci/cd的话直接上传构建产物了，git只作为代码追踪使用 golang echo 部署脚本 #! /bin/bash #打包压缩 GOOS=linux GOARCH=amd64 go build -o project &amp;amp;&amp;amp; zip project.zip project #scp上传</description>
    </item>
    
    <item>
      <title>ant-design-landing生成页面报错</title>
      <link>https://glitterlip.github.io/blog/2022-08/ant-design-landing%E7%94%9F%E6%88%90%E9%A1%B5%E9%9D%A2%E6%8A%A5%E9%94%99/</link>
      <pubDate>Wed, 17 Aug 2022 01:49:05 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-08/ant-design-landing%E7%94%9F%E6%88%90%E9%A1%B5%E9%9D%A2%E6%8A%A5%E9%94%99/</guid>
      <description>后台写完了要写个落地页，自己css太菜了，找个现成的吧. 发现这个项目挺好https://github.com/ant-design/ant-design-landing，相当于低代码吧。 编辑器 里面随便点点很快就能生成一个react页面，还可以直接整合到umijs项目里面. 和其他xx开源的项目一样，kpi产物不少，代码放出来就不维护了，在线demo体验很好，一放到本地跑起来就疯狂报错，这个项目也是年</description>
    </item>
    
    <item>
      <title>umi4设置title keyword description</title>
      <link>https://glitterlip.github.io/blog/2022-08/umi4%E8%AE%BE%E7%BD%AEtitle-keyword-description/</link>
      <pubDate>Wed, 17 Aug 2022 01:49:05 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-08/umi4%E8%AE%BE%E7%BD%AEtitle-keyword-description/</guid>
      <description>umijs升级到v4之后原来v3通过修改src/pages/document.ejs文件来设置title,keyword,description,favicon的方法 失效 了 新版本v4可以通过配置来修改 在config/config.ts中defineConfig方法添加字段 title: &amp;#34;title&amp;#34;, metas: [ { name: &amp;#39;keywords&amp;#39;, content: &amp;#39;keywords&amp;#39; }, { name: &amp;#39;description&amp;#39;, content: &amp;#39;description&amp;#39; }, ],</description>
    </item>
    
    <item>
      <title>ant design pro datepicker</title>
      <link>https://glitterlip.github.io/blog/2022-08/ant-design-pro-datepicker/</link>
      <pubDate>Tue, 16 Aug 2022 18:54:24 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-08/ant-design-pro-datepicker/</guid>
      <description>使用ant design pro的protable时，数据的字段是时间，筛选的时候想按照时间段来筛选 比如订单列表，支付时间字段的column列定义的valueType是dateTime,展示的时候展示成支付时间，但是在列表头筛选的时候按照支付时间段筛选 这个需求可以定义两个字段 { title: &amp;#39;支付时间&amp;#39;, dataIndex: &amp;#39;paid_at&amp;#39;, ellipsis: true, valueType: &amp;#39;dateTime&amp;#39;, hideInSearch: true }, { title: &amp;#39;支付时间&amp;#39;, dataIndex: &amp;#39;paid_at&amp;#39;, ellipsis: true, valueType: &amp;#39;dateTimeRange&amp;#39;, hideInTable: true, search: { transform: (value: any) =&amp;gt; ({startTime: value[0], endTime: value[1]}), } }, 筛选查询的时</description>
    </item>
    
    <item>
      <title>1480. Running Sum of 1d Array #</title>
      <link>https://glitterlip.github.io/snippet/leetcode/1480/</link>
      <pubDate>Wed, 10 Aug 2022 11:14:43 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/leetcode/1480/</guid>
      <description>1480. Running Sum of 1d Array 题目 Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]). Return the running sum of nums. Example 1: Input: nums = [1,2,3,4] Output: [1,3,6,10] Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4]. Example 2: Input: nums = [1,1,1,1,1] Output: [1,2,3,4,5] Explanation: Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1]. Example 3: Input: nums = [3,1,2,10,1] Output: [3,4,6,16,17] Constraints: 1 &amp;lt;= nums.length &amp;lt;= 1000 -10^6 &amp;lt;= nums[i] &amp;lt;= 10^6 题目大意 给你一个数组 nums 。数组「动态和」的计算公式为：runningSum[i] = sum(nums[0]…nums[i]) 。请返回 nums 的动态和。 解题思路 简单题，按照题意依次循环计算前缀和即</description>
    </item>
    
    <item>
      <title>ant design pro查看官网预览源码</title>
      <link>https://glitterlip.github.io/snippet/ant-pro-preview/</link>
      <pubDate>Wed, 10 Aug 2022 11:14:43 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/ant-pro-preview/</guid>
      <description>emmm觉得官网的demo例子写的不错，想照着抄一下 克隆仓库git clone https://github.com/ant-design/ant-design-pro.git 进入项目目录yarn安装依赖 yarn run pro fetch-blocks --branch=v5获取代码块 yarn start就可以在本地跑起来demo了 config/routes.ts是路由文件，src/pages里面是源码</description>
    </item>
    
    <item>
      <title>golang mysql设置时区</title>
      <link>https://glitterlip.github.io/snippet/mysql-loc/</link>
      <pubDate>Sat, 06 Aug 2022 11:14:43 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/mysql-loc/</guid>
      <description>github.com/go-sql-driver包设置时区 DSN方式追加loc参数，值必须转义,/用%2F替换 DSN: parseTime=true&amp;amp;loc=Asia%2FShanghai</description>
    </item>
    
    <item>
      <title>laravel telescope get response code</title>
      <link>https://glitterlip.github.io/snippet/telescope-response-code/</link>
      <pubDate>Wed, 20 Jul 2022 09:53:11 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/snippet/telescope-response-code/</guid>
      <description>Telescope::tag(function (IncomingEntry $entry) { $tags = []; if ( $entry-&amp;gt;isRequest() ) { if ( $entry-&amp;gt;content[&amp;#39;response_status&amp;#39;] == 302 ) { $tags[] = &amp;#39;redirect&amp;#39;; } } return $tags; }); </description>
    </item>
    
    <item>
      <title>golang template函数传递多个参数</title>
      <link>https://glitterlip.github.io/blog/2022-07/golang-template%E5%87%BD%E6%95%B0%E4%BC%A0%E9%80%92%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0/</link>
      <pubDate>Tue, 19 Jul 2022 09:53:11 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-07/golang-template%E5%87%BD%E6%95%B0%E4%BC%A0%E9%80%92%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0/</guid>
      <description>golang开发web页面时，会把页面的公共部分抽离出来，定义成组件 比如定义一个header，然后其他页面就无需再重复写了，直接引入即可 //header.html {{define &amp;#34;header&amp;#34;}} this is header. Current User:{{.user.Name}} {{end}} //detail.html {{template &amp;#34;header&amp;#34; .user}} 但是此时如果你想再展示天气，你可以定义一个UserWithWeather，这就有点不伦不类了 我们可以定义一个map模板函数 template.New(&amp;#34;view&amp;#34;).Funcs(template.FuncMap{ &amp;#34;mapof&amp;#34;: func(kvpairs ...interface{}) (map[string]interface{}, error) { if len(kvpairs)%2 != 0 { return nil, errors.New(&amp;#34;wrong number of arguements&amp;#34;) } dict := make(map[string]interface{}, len(kvpairs)/2) for i := 0; i &amp;lt; len(kvpairs); i += 2 { key, ok := kvpairs[i].(string) if !ok { return nil, errors.New(&amp;#34;map keys must be strings&amp;#34;) } dict[key] = kvpairs[i+1] } return dict, nil }, })</description>
    </item>
    
    <item>
      <title>支付宝免签付原理</title>
      <link>https://glitterlip.github.io/blog/2022-07/%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%8D%E7%AD%BE%E4%BB%98%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 18 Jul 2022 19:53:11 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-07/%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%8D%E7%AD%BE%E4%BB%98%E5%8E%9F%E7%90%86/</guid>
      <description>支付宝网站接入支付需要营业执照，ICP备案。 可以在百度或者高德随便找个门头照申请开通当面付，0.38的费率，单笔交易限额1000，日限额5w。不过如果频繁有外地ip支付就会风控，包括要求提供营业执照，限制收款，以及清退，最严重的就是当面抓了^ - ^。 这个时候可以用收款码（码支付）解决。 主要原理就是系统生成固定金额的支付宝个人收款码，展示给用户，用户付款，手机收到转账到帐通知后通知网站支付成功。 示例代</description>
    </item>
    
    <item>
      <title>golang cron包计划任务不执行</title>
      <link>https://glitterlip.github.io/blog/2022-07/golang-cron%E5%8C%85%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%B8%8D%E6%89%A7%E8%A1%8C/</link>
      <pubDate>Mon, 18 Jul 2022 09:53:11 +0800</pubDate>
      
      <guid>https://glitterlip.github.io/blog/2022-07/golang-cron%E5%8C%85%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%B8%8D%E6%89%A7%E8%A1%8C/</guid>
      <description>cron包旧版本中的表达式和常见的linux crontab表达式并不一致， 多了一个秒级别的定时，新版本中v3已经移除了 如果你在使用github.com/robfig/cron/v3这个包的时候遇到计划任务未执行可能是这个原因 使用秒级定时器 c:=cron.New(cron.WithSeconds()) c.AddFunc(&amp;#34;0 30 * * * *&amp;#34;, func() { fmt.Println(&amp;#34;Every hour on the half hour&amp;#34;) }) 不需要秒级定时器 c:=cron.New() c.AddFunc(&amp;#34;30 * * * *&amp;#34;, func() { fmt.Println(&amp;#34;Every hour on the half hour&amp;#34;) })</description>
    </item>
    
  </channel>
</rss>
